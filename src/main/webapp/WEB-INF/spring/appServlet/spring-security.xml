<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
 

	<context:component-scan base-package="com.min"/>
	<mvc:annotation-driven/>

<!-- Security컨트롤러 -->
<bean id="securityController" class="com.min.security.SecurityController"/>
	
	
<security:authentication-manager>
	<security:authentication-provider user-service-ref="securityController" >
<!-- 		<security:password-encoder ref="passwordEncoder" /> -->
	</security:authentication-provider>	
</security:authentication-manager>	
	 <security:http auto-config="true" pattern="/*" use-expressions="true" >
     <security:intercept-url pattern="./assets/**" access="permitAll" />
	    <security:intercept-url pattern="./assets/**" access="permitAll" />
		<security:intercept-url pattern="./js/**" access="permitAll" />
		<security:intercept-url pattern="./css/**" access="permitAll" />
		<security:intercept-url pattern="./images/**" access="permitAll" />
		<security:intercept-url pattern="/**" access="permitAll" />
		
	
		
<!-- 				<security:intercept-url pattern="/user/**" access="permitAll"/> -->
		
		<security:logout invalidate-session="true" 
		logout-url="/logout.do" 
		logout-success-url="/loginPage.do?logout" delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
	
	
		</security:http>
	
<!-- /////////////////////////////////  main  ////////////////////////////////////// -->
    <security:http auto-config="true" pattern="/app/**" use-expressions="true" >
     <security:intercept-url pattern="./assets/**" access="permitAll" />
	    <security:intercept-url pattern="../assets/**" access="permitAll" />
		<security:intercept-url pattern="../js/**" access="permitAll" />
		<security:intercept-url pattern="../css/**" access="permitAll" />
		<security:intercept-url pattern="../images/**" access="permitAll" />
		<security:intercept-url pattern="/app/**" access="permitAll" />
		
	
		
<!-- 				<security:intercept-url pattern="/user/**" access="permitAll"/> -->
		
		<security:logout invalidate-session="true" 
		logout-url="/app/logout.do" 
		logout-success-url="/loginPage.do?logout" delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
	
	
		</security:http>


<!-- /////////////////////////////////  user  ////////////////////////////////////// -->
<bean id="userAuthProvider"	class="com.min.security.UserAuthService" />
	<security:authentication-manager	id="userAuthManager">
		<security:authentication-provider 	ref="userAuthProvider" />
	</security:authentication-manager>
	
<!-- /////////////////////////////////  user  ////////////////////////////////////// -->
<security:http auto-config="true" pattern="/user/**" use-expressions="true" authentication-manager-ref="userAuthManager">
		<security:intercept-url pattern="../assets/**" access="permitAll" />
		<security:intercept-url pattern="../js/**" access="permitAll" />
		<security:intercept-url pattern="../css/**" access="permitAll" />
		<security:intercept-url pattern="../images/**" access="permitAll" />
		<!-- 정적 리소스는 모두 접근 허용 -->
<!-- 		<security:intercept-url pattern="/assets/**/**" access="permitAll" /> -->
		
		<security:intercept-url pattern="/user/loginPage.do" access="permitAll"/>
		<security:intercept-url pattern="/user/traSignUp.do" access="permitAll"/>
		<security:intercept-url pattern="/user/reMain.do" access="permitAll"/>
		<security:intercept-url pattern="/user/main.do" access="permitAll"/>
		<security:intercept-url pattern="/user/findTraIdView.do" access="permitAll"/>
		<security:intercept-url pattern="/user/**" access="permitAll"/>
		
		
		<!-- 전체허용.? -->
		<security:intercept-url pattern="/user/*.do" access="hasRole('USER')"/>
	<security:access-denied-handler error-page="/user/AuthError.do"/>
<!-- 		<security:access-denied-handler error-page="/user/AuthError.do"/> -->
<!-- 		<security:intercept-url pattern="/user/*.do" access="hasRole('USER')"/> -->
		
<!-- 		<security:intercept-url pattern="/user/myProfile.do" access="permitAll"/> -->
<!-- 		<security:intercept-url pattern="/user/findTraId.do" access="permitAll"/> -->
<!-- 		<security:intercept-url pattern="/user/idCheck.do" access="permitAll"/> -->
<!-- 		<security:intercept-url pattern="/user/page.do" access="hasRole('ADMIN')"/> -->
<!-- 		<security:intercept-url pattern="/user/updateProfile.do" access="permitAll"/> -->
		
<!-- 		<security:intercept-url pattern="/user/adminTraList.do" access="hasRole('ADMIN')"/> -->
<!-- 		<security:intercept-url pattern="/user/**" access="hasRole('USER')"/> -->
<!-- 		<security:intercept-url pattern="/user/**" access="hasRole('ADMIN')"/> -->
<!-- 		<security:intercept-url pattern="/user/admin/**" access="hasRole('ADMIN')"/> -->

<!--                 <security:intercept-url pattern="/user/user_subjectDetail.do" access="permitAll"/> -->
<!-- 		<security:intercept-url pattern="/user/user_mySubjectList.do" access="permitAll"/> -->
<!-- 		<security:intercept-url pattern="/user/admin_subjectDetail.do" access="hasRole('ADMIN')"/> -->

<!-- 		<security:intercept-url pattern="/**" access="permitAll"/> -->
<!-- 		login-processing-url="/logingo.do"  -->

		<!-- 
			1로그인 컨트롤러가 로그인 처리를 해주도록 하는 요청 이름 
			2DelegateFilterChian 을 통해 첫페이지를 만들어주는 요청 이름
			3로그인이 성공 시 이동할 페이지 요청 이름
			4.로그인 페이지에서 받아올 username 의 name 값
			5.로그인 실패 시 이동하는 페이지 요청의 이름
			https://bit.ly/3wpscRZ 사용자 비밀번호 검사
		-->
		<security:form-login 
		login-processing-url="/user/logingo.do" 
		login-page="/user/loginPage.do" 
		default-target-url="/user/result.do"
		username-parameter="id"
		password-parameter="pw"
		always-use-default-target="true"
		authentication-failure-handler-ref="UserLoginFailHandler"
		/>
		
		<!--authentication-failure-url="/user/TraloginPage.do?error"-->
		<!-- 
		  1세션을 삭제할 것인지
		  2로그아웃 요청 이름
		  3로그아웃이 성공할 때의 요청 이름, 삭제될 쿠키 : JSESSION - 브라우저가 갖고있는 기본 세션, JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" : 로그인 시 생성된 쿠키
		 -->
		<security:logout invalidate-session="true" 
		logout-url="/user/logout.do" 
		logout-success-url="/app/loginPage.do?logout" delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		
		<!-- 
		  세션이 유지되는 시간(초) : 기본 - 2주 3600(60초*60) = 한시간
		  기본 설정된 REMEBER-ME 파라미터 이름
		 -->
		<security:remember-me key="nobrand" 
		token-validity-seconds="3600" 
		remember-me-parameter="remember-me"
		/>
		
		<!-- 
		  토큰 : 나라는 것을 기억하도록 발급해주는 애
		  사용하지 않도록 설정 : true	
		 -->
		<security:csrf disabled="true"/>
		
		
		<!-- 
			세션이 지워지면 이동할 페이지의 요청 이름
			최대로 유지되는 세션의 갯수 / 
			세션이 중복될 경우 이동할 페이지 요청 이름 / 
			로그인이 중복되었을 때 새로운 세션으로 교체하려면  false 
			기존 세션을 유지하려면 true
		 -->
		<security:session-management invalid-session-url="/loginPage.do">
			<security:concurrency-control max-sessions="1" 
			expired-url="/user/duplicateLogin.do" error-if-maximum-exceeded="false"/>
		</security:session-management>
		
	</security:http>

<!-- /////////////////////////////////  Instructor  ////////////////////////////////////// -->
<bean id="InsAuthProvider"	class="com.min.security.InsAuthService" />
	<security:authentication-manager	id="InsAuthManager">
		<security:authentication-provider 	ref="InsAuthProvider" />
	</security:authentication-manager>
	
<!-- /////////////////////////////////  Instructor  ////////////////////////////////////// -->
<security:http auto-config="true" pattern="/ins/**" use-expressions="true" authentication-manager-ref="InsAuthManager">
		<security:intercept-url pattern="../assets/**" access="permitAll" />
		<security:intercept-url pattern="../js/**" access="permitAll" />
		<security:intercept-url pattern="../css/**" access="permitAll" />
		<security:intercept-url pattern="../images/**" access="permitAll" />
		<!-- 정적 리소스는 모두 접근 허용 -->
<!-- 		<security:intercept-url pattern="/assets/**/**" access="permitAll" /> -->
	
		<security:access-denied-handler error-page="/ins/AuthError.do"/>
		<security:intercept-url pattern="/ins/loginPage.do" access="permitAll"/>
		<security:intercept-url pattern="/ins/InsSingUpgo.do"  access="permitAll"/>
		<security:intercept-url pattern="/ins/**"  access="permitAll"/>
<!-- 		<security:intercept-url pattern="/ins/**" access="hasRole('INSTRUCTOR')"/> -->
<!-- 	<security:intercept-url pattern="/ins/main.do" access="permitAll"/> -->
<!-- 		<security:intercept-url pattern="/**" access="permitAll"/> -->
<!-- 		login-processing-url="/logingo.do"  -->

		<!-- 
			1로그인 컨트롤러가 로그인 처리를 해주도록 하는 요청 이름 
			2DelegateFilterChian 을 통해 첫페이지를 만들어주는 요청 이름
			3로그인이 성공 시 이동할 페이지 요청 이름
			4.로그인 페이지에서 받아올 username 의 name 값
			5.로그인 실패 시 이동하는 페이지 요청의 이름
			https://bit.ly/3wpscRZ 사용자 비밀번호 검사
		-->
		<security:form-login 
		login-processing-url="/ins/logingo.do" 
		login-page="/ins/loginPage.do" 
		default-target-url="/ins/result.do"
		username-parameter="id"
		password-parameter="pw"
		authentication-failure-handler-ref="InsLoginFailHandler"
		always-use-default-target="true"/>
		
		<!-- 
		  1세션을 삭제할 것인지
		  2로그아웃 요청 이름
		  3로그아웃이 성공할 때의 요청 이름, 삭제될 쿠키 : JSESSION - 브라우저가 갖고있는 기본 세션, JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" : 로그인 시 생성된 쿠키
		 -->
		<security:logout invalidate-session="true" 
		logout-url="/ins/logout.do" 
		logout-success-url="/app/loginPage.do?logout" delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		
		<!-- 
		  세션이 유지되는 시간(초) : 기본 - 2주 3600(60초*60) = 한시간
		  기본 설정된 REMEBER-ME 파라미터 이름
		 -->
		<security:remember-me key="nobrand" 
		token-validity-seconds="3600" 
		remember-me-parameter="remember-me"
		/>
		
		<!-- 
		  토큰 : 나라는 것을 기억하도록 발급해주는 애
		  사용하지 않도록 설정 : true	
		 -->
		<security:csrf disabled="true"/>
		
		
		<!-- 
			세션이 지워지면 이동할 페이지의 요청 이름
			최대로 유지되는 세션의 갯수 / 
			세션이 중복될 경우 이동할 페이지 요청 이름 / 
			로그인이 중복되었을 때 새로운 세션으로 교체하려면  false 
			기존 세션을 유지하려면 true
		 -->
		<security:session-management invalid-session-url="/loginPage.do">
			<security:concurrency-control max-sessions="1" 
			expired-url="/ins/duplicateLogin.do" error-if-maximum-exceeded="false"/>
		</security:session-management>
		
	</security:http>


<!-- 암호화 -->
<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> 
<!-- 로그인 실패 시 핸들러 -->
<bean id="UserLoginFailHandler" class="com.min.security.UserLoginFailHandler">
	<property name="id" value="id" />
	<property name="pw" value="pw" />
	<property name="loginredirectname" value="loginRedirect" />
	<property name="exceptionmsgname" value="securityexceptionmsg" />
	<property name="defaultFailureUrl" value="/user/loginPage.do?fail=true" />
	</bean>
	
<bean id="InsLoginFailHandler" class="com.min.security.InsLoginFailHandler">
	<property name="id" value="id" />
	<property name="pw" value="pw" />
	<property name="loginredirectname" value="loginRedirect" />
	<property name="exceptionmsgname" value="securityexceptionmsg" />
	<property name="defaultFailureUrl" value="/ins/loginPage.do?fail=true" />
	</bean>
	

</beans>